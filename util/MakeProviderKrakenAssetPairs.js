/*jshint moz:true */
// vi: sw=2 sts=2 et
(function main () {
  const MakeProviderKrakenAssetPairs = function (data) {
    // remove deleted pairs ending with '.d'
    Object.keys(data).forEach(function (key) {
      if (key.endsWith('.d')) {
        delete data[key];
        return;
      };
      
      // remove obsolete properties
      Object.keys(data[key]).forEach(function (name) {
        if (['base','quote','altname','pair_decimals'].indexOf(name) == -1) {
          delete data[key][name];
        };
      });
    });

    return data;
  };

  if (this.ARGV !== undefined) {
    const Soup = imports.gi.Soup;
    const _httpSession = new Soup.SessionAsync();
    const url = "https://api.kraken.com/0/public/AssetPairs";
    _httpSession.queue_message(
      Soup.Message.new("GET", url),
      function (session, message) {
        let json = message.response_body.data;
        let data = JSON.parse(json);
        if (data != null) {
    let pairs = MakeProviderKrakenAssetPairs(data.result);
          print("/*jshint moz:true */");
          print("/* generated by util/MakeProviderKrakenAssetPairs.js */");
          print("var AssetPairs = " + JSON.stringify(pairs, null, 4) + ";");
        } else {
    throw Error("Unable to get Asset Pairs from Kraken.com.");
  }
        imports.mainloop.quit("main");
      }
    );

    imports.mainloop.run("main");
  }
})();
